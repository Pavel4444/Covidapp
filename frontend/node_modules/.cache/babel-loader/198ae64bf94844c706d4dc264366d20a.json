{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\007ac\\\\Desktop\\\\prace\\\\frontend\\\\src\\\\Components\\\\Datatable.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Card } from 'primereact/card';\nimport { InputText } from 'primereact/inputtext';\n\nclass Datatable extends Component {\n  constructor() {\n    super();\n    this.state = {\n      countries: [{\n        field: \"Country\",\n        header: \"Country\"\n      }, {\n        field: \"TotalConfirmed\",\n        header: 'Infected'\n      }, {\n        field: \"TotalDeaths\",\n        header: 'Deaths'\n      }, {\n        field: \"TotalRecovered\",\n        header: 'Recovered'\n      }]\n    };\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n  }\n\n  onColumnToggle(event) {\n    let selectedColumns = event.value;\n    let orderedSelectedColumns = this.state.columns.filter(col => selectedColumns.includes(col));\n    this.setState({\n      selectedColumns: orderedSelectedColumns\n    });\n  }\n\n  render() {\n    const {\n      summaryCountries\n    } = this.props;\n    const header = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'textAlign': 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n    const footer = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.selectedColumns,\n      options: this.state.columns,\n      optionLabel: \"field\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '250px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n    const columnComponents = this.state.selectedColumns.map(col => {\n      return /*#__PURE__*/React.createElement(Column, {\n        key: col.field,\n        field: col.field,\n        header: col.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }\n      });\n    });\n    let dynamicColumns = this.state.countries.map(col => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      value: summaryCountries,\n      header: header,\n      footer: footer,\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, dynamicColumns));\n  }\n\n}\n\nexport default Datatable;","map":{"version":3,"sources":["C:/Users/007ac/Desktop/prace/frontend/src/Components/Datatable.js"],"names":["React","Component","DataTable","Column","Card","InputText","Datatable","constructor","state","countries","field","header","onColumnToggle","bind","event","selectedColumns","value","orderedSelectedColumns","columns","filter","col","includes","setState","render","summaryCountries","props","margin","e","globalFilter","target","footer","textAlign","width","columnComponents","map","dynamicColumns"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Card } from 'primereact/card';\r\nimport {InputText} from 'primereact/inputtext';\r\n\r\nclass Datatable extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            countries: [\r\n                { field: \"Country\", header: \"Country\" },\r\n                { field: \"TotalConfirmed\", header: 'Infected' },\r\n                { field: \"TotalDeaths\", header: 'Deaths' },\r\n                { field: \"TotalRecovered\", header: 'Recovered' }\r\n\r\n            ]\r\n            \r\n        };\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = this.state.columns.filter(col => selectedColumns.includes(col));\r\n        this.setState({selectedColumns: orderedSelectedColumns});\r\n    }\r\n\r\n\r\n    render() {\r\n        const { summaryCountries } = this.props;\r\n        const header = (\r\n            <div style={{'textAlign':'center'}}>\r\n                <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                <InputText type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Global Search\" size=\"50\"/>\r\n            </div>\r\n        );\r\n        const footer = (\r\n            <div style={{textAlign:'left'}}>\r\n                <MultiSelect value={this.state.selectedColumns} options={this.state.columns} optionLabel=\"field\" onChange={this.onColumnToggle} style={{width:'250px'}}/>\r\n            </div>\r\n        );\r\n        const columnComponents = this.state.selectedColumns.map(col=> {\r\n            return <Column key={col.field} field={col.field} header={col.header} />;\r\n        });\r\n\r\n        let dynamicColumns = this.state.countries.map((col) => {\r\n            return <Column field={col.field} header={col.header} sortable={true} />;\r\n        });\r\n\r\n        return (\r\n\r\n            <Card>\r\n                <DataTable value={summaryCountries} header={header} footer={footer}\r\n                globalFilter={this.state.globalFilter} emptyMessage=\"No records found\"> \r\n                    {dynamicColumns}\r\n                </DataTable>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Datatable;"]},"metadata":{},"sourceType":"module"}