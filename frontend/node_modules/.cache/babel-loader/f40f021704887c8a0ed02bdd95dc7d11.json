{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\007ac\\\\Desktop\\\\prace\\\\frontend\\\\src\\\\Components\\\\Datatable.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Card } from 'primereact/card';\nimport { InputText } from 'primereact/inputtext';\nimport { MultiSelect } from 'primereact/multiselect';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport { Dialog } from 'primereact/dialog';\n\nclass Datatable extends Component {\n  constructor() {\n    super();\n    this.state = {\n      countries: [{\n        field: \"Country\",\n        header: \"Country\"\n      }, {\n        field: \"TotalConfirmed\",\n        header: 'Infected'\n      }, {\n        field: \"TotalDeaths\",\n        header: 'Deaths'\n      }, {\n        field: \"TotalRecovered\",\n        header: 'Recovered'\n      }],\n      selectedColumns: []\n    };\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.onCarSelect = this.onCarSelect.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedColumns: this.state.countries\n    });\n  }\n\n  onColumnToggle(event) {\n    let selectedColumns = event.value;\n    let orderedSelectedColumns = this.state.countries.filter(col => selectedColumns.includes(col));\n    this.setState({\n      selectedColumns: orderedSelectedColumns\n    });\n  }\n\n  onCarSelect(e) {\n    this.setState({\n      displayDialog: true,\n      car: Object.assign({}, e.data)\n    });\n  }\n\n  render() {\n    const {\n      summaryCountries\n    } = this.props;\n    const header = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'textAlign': 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Country stats\"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }));\n    const footer = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.selectedColumns,\n      options: this.state.countries,\n      optionLabel: \"header\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '250px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }));\n    let dynamicColumns = this.state.selectedColumns.map(col => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 20\n        }\n      });\n    });\n    console.log(URL);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      value: summaryCountries,\n      selectionMode: \"single\",\n      selection: this.state.selectedCar,\n      onSelectionChange: e => this.setState({\n        selectedCar: e.value\n      }),\n      onRowSelect: this.onCarSelect,\n      header: header,\n      footer: footer,\n      paginator: true,\n      paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n      currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} entries\",\n      rows: 20,\n      rowsPerPageOptions: [20, 100],\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, dynamicColumns)), /*#__PURE__*/React.createElement(Dialog, {\n      visible: this.state.displayDialog,\n      width: \"50px\",\n      header: \"Country Details\",\n      onHide: () => this.setState({\n        displayDialog: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 1\n      }\n    }, this.state.car && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(C3Chart, {\n      data: this.state.dat = {\n        json: [this.state.car],\n        keys: {\n          value: ['NewConfirmed', 'NewDeaths']\n        },\n        names: {\n          NewConfirmed: '24 hours infected',\n          NewDeaths: '24 hours deaths'\n        },\n        type: 'bar',\n        colors: {\n          NewConfirmed: 'red',\n          NewDeaths: 'black'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Datatable;","map":{"version":3,"sources":["C:/Users/007ac/Desktop/prace/frontend/src/Components/Datatable.js"],"names":["React","Component","DataTable","Column","Card","InputText","MultiSelect","C3Chart","Dialog","Datatable","constructor","state","countries","field","header","selectedColumns","onColumnToggle","bind","onCarSelect","componentDidMount","setState","event","value","orderedSelectedColumns","filter","col","includes","e","displayDialog","car","Object","assign","data","render","summaryCountries","props","margin","globalFilter","target","footer","textAlign","width","dynamicColumns","map","console","log","URL","selectedCar","dat","json","keys","names","NewConfirmed","NewDeaths","type","colors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Card } from 'primereact/card';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {MultiSelect} from 'primereact/multiselect';\r\nimport C3Chart from 'react-c3js';\r\nimport 'c3/c3.css';\r\nimport {Dialog} from 'primereact/dialog';\r\nclass Datatable extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            countries: [\r\n                { field: \"Country\", header: \"Country\" },\r\n                { field: \"TotalConfirmed\", header: 'Infected' },\r\n                { field: \"TotalDeaths\", header: 'Deaths' },\r\n                { field: \"TotalRecovered\", header: 'Recovered' }\r\n\r\n            ],\r\n            selectedColumns: []\r\n        };\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.onCarSelect = this.onCarSelect.bind(this);\r\n        \r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({selectedColumns: this.state.countries});\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n      \r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = this.state.countries.filter(col => selectedColumns.includes(col));\r\n        this.setState({selectedColumns: orderedSelectedColumns});\r\n    }\r\n\r\n    onCarSelect(e){\r\n        this.setState({\r\n            displayDialog:true,\r\n            car: Object.assign({}, e.data)\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n\r\n    \r\n        \r\n        const { summaryCountries } = this.props;\r\n        const header = (\r\n    \r\n               \r\n            <div style={{'textAlign':'center'}}>\r\n                <h1>Country stats</h1>\r\n                <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                <InputText type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Global Search\" size=\"50\"/>\r\n            </div>\r\n        );\r\n\r\n        const footer = (\r\n            \r\n            <div style={{textAlign:'center'}}> \r\n            <MultiSelect value={this.state.selectedColumns} options={this.state.countries} optionLabel=\"header\" onChange={this.onColumnToggle} style={{width:'250px'}}/>\r\n        </div>\r\n        );\r\n\r\n\r\n        let dynamicColumns = this.state.selectedColumns.map((col) => {\r\n            return <Column field={col.field} header={col.header} sortable={true} />;\r\n        });\r\n\r\n        console.log(URL);\r\n\r\n        return (\r\n            \r\n            <div>\r\n            <Card>\r\n                <DataTable \r\n                    value={summaryCountries} \r\n                    selectionMode=\"single\"\r\n                    selection={this.state.selectedCar}\r\n                    onSelectionChange={e => this.setState({selectedCar: e.value})}\r\n                    onRowSelect={this.onCarSelect}\r\n                    header={header}\r\n                    footer={footer}\r\n                    paginator={true}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" \r\n                    rows={20} \r\n                    rowsPerPageOptions={[20, 100]}\r\n                    globalFilter={this.state.globalFilter} \r\n                    emptyMessage=\"No records found\">\r\n\r\n                    {dynamicColumns}\r\n                </DataTable>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Card>\r\n\r\n\r\n<Dialog visible={this.state.displayDialog} width=\"50px\" header=\"Country Details\" onHide={() => this.setState({displayDialog: false})}>\r\n                \r\n                {   \r\n                    this.state.car &&\r\n\r\n               \r\n\r\n                    <div>\r\n\r\n\r\n                       \r\n\r\n                        <C3Chart data={this.state.dat = {json: \r\n                        [this.state.car]\r\n                  \r\n                    \r\n                    ,\r\n                    \r\n                        keys: {\r\n                          \r\n            \r\n                            value: ['NewConfirmed', 'NewDeaths']\r\n                        },\r\n                        names: {\r\n                            NewConfirmed: '24 hours infected',\r\n                            NewDeaths: '24 hours deaths'\r\n            \r\n                        },\r\n\r\n                        type: 'bar' ,\r\n\r\n                        colors: {\r\n                            NewConfirmed: 'red',\r\n                            NewDeaths: 'black',\r\n                            \r\n                        },\r\n            \r\n                    \r\n                    }\r\n                        \r\n                    } />\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                \r\n                    \r\n                }\r\n\r\n</Dialog>\r\n\r\n</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Datatable;"]},"metadata":{},"sourceType":"module"}