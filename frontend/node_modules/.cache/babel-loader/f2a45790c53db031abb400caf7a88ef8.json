{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\007ac\\\\Desktop\\\\prace\\\\frontend\\\\src\\\\Components\\\\Chart.js\";\nimport React, { Component } from 'react';\nimport { Card } from 'primereact/card';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport axios from 'axios';\n\nclass Charts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    console.log(this.props.json);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-col-12\",\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(C3Chart, {\n      axis: {\n        x: {\n          type: 'timeseries',\n          label: {\n            text: 'Date',\n            position: 'outer-center'\n          }\n        },\n        y: {\n          label: {\n            text: 'Number of people',\n            position: 'outer-middle'\n          }\n        }\n      },\n      data: this.state.dat = {\n        json: this.props.json,\n        keys: {\n          x: 'reportDate',\n          value: ['totalConfirmed', 'deaths.total']\n        },\n        names: {\n          totalConfirmed: 'Infected',\n          'deaths.total': 'Deaths'\n        },\n        types: {\n          totalConfirmed: 'area-spline',\n          'deaths.total': 'area-spline' // 'line', 'spline', 'step', 'area', 'area-step' are also available to stack\n\n        },\n        colors: {\n          totalConfirmed: 'red',\n          'deaths.total': 'black'\n        },\n        zoom: {\n          enabled: true\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(C3Chart, {\n      axis: {\n        x: {\n          type: 'timeseries',\n          label: {\n            text: 'Date',\n            position: 'outer-center'\n          }\n        },\n        y: {\n          label: {\n            text: 'Number of people',\n            position: 'outer-middle'\n          }\n        }\n      },\n      data: this.state.dat = {\n        json: this.props.json,\n        keys: {\n          x: 'reportDate',\n          value: ['totalConfirmed', 'deaths.total']\n        },\n        names: {\n          totalConfirmed: 'Infected',\n          'deaths.total': 'Deaths'\n        },\n        types: {\n          totalConfirmed: 'area-spline',\n          'deaths.total': 'area-spline' // 'line', 'spline', 'step', 'area', 'area-step' are also available to stack\n\n        },\n        colors: {\n          totalConfirmed: 'red',\n          'deaths.total': 'black'\n        },\n        zoom: {\n          enabled: true\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 1\n      }\n    })));\n  }\n\n}\n\nexport default Charts;","map":{"version":3,"sources":["C:/Users/007ac/Desktop/prace/frontend/src/Components/Chart.js"],"names":["React","Component","Card","C3Chart","axios","Charts","constructor","props","state","render","console","log","json","textAlign","x","type","label","text","position","y","dat","keys","value","names","totalConfirmed","types","colors","zoom","enabled"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card } from 'primereact/card';\r\nimport C3Chart from 'react-c3js';\r\nimport 'c3/c3.css';\r\nimport axios from 'axios';\r\nclass Charts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    \r\n        this.state = {\r\n            \r\n            \r\n\r\n        };\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        console.log(this.props.json);\r\n        return (\r\n           \r\n\r\n            \r\n\r\n                <div class=\"p-col-12\" style={{ textAlign: 'center' }}>\r\n\r\n                    <Card>\r\n\r\n                        <C3Chart axis={{\r\n                            x: {\r\n                                type: 'timeseries',\r\n                                label: {\r\n                                    text: 'Date',\r\n                                    position: 'outer-center'\r\n                                }\r\n                            },\r\n                            y: {\r\n                                label: {\r\n                                    text: 'Number of people',\r\n                                    position: 'outer-middle'\r\n                                }\r\n                            },\r\n\r\n                        }} data={this.state.dat = {json: this.props.json,\r\n                        \r\n                            keys: {\r\n                                x: 'reportDate',\r\n                \r\n                                value: ['totalConfirmed', 'deaths.total']\r\n                            },\r\n                            names: {\r\n                                totalConfirmed: 'Infected',\r\n                                'deaths.total': 'Deaths'\r\n                \r\n                            },\r\n                            types: {\r\n                                totalConfirmed: 'area-spline',\r\n                                'deaths.total': 'area-spline'\r\n                                // 'line', 'spline', 'step', 'area', 'area-step' are also available to stack\r\n                            },\r\n                            colors: {\r\n                                totalConfirmed: 'red',\r\n                                'deaths.total': 'black',\r\n                                \r\n                            },\r\n                            zoom: {\r\n                                enabled: true\r\n                            }\r\n                        \r\n                        }} />\r\n\r\n                    </Card>\r\n\r\n                    <Card>\r\n\r\n<C3Chart axis={{\r\n    x: {\r\n        type: 'timeseries',\r\n        label: {\r\n            text: 'Date',\r\n            position: 'outer-center'\r\n        }\r\n    },\r\n    y: {\r\n        label: {\r\n            text: 'Number of people',\r\n            position: 'outer-middle'\r\n        }\r\n    },\r\n\r\n}} data={this.state.dat = {json: this.props.json,\r\n\r\n    keys: {\r\n        x: 'reportDate',\r\n\r\n        value: ['totalConfirmed', 'deaths.total']\r\n    },\r\n    names: {\r\n        totalConfirmed: 'Infected',\r\n        'deaths.total': 'Deaths'\r\n\r\n    },\r\n    types: {\r\n        totalConfirmed: 'area-spline',\r\n        'deaths.total': 'area-spline'\r\n        // 'line', 'spline', 'step', 'area', 'area-step' are also available to stack\r\n    },\r\n    colors: {\r\n        totalConfirmed: 'red',\r\n        'deaths.total': 'black',\r\n        \r\n    },\r\n    zoom: {\r\n        enabled: true\r\n    }\r\n\r\n}} />\r\n\r\n</Card>\r\n\r\n                </div>\r\n\r\n            \r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}