{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\007ac\\\\Desktop\\\\prace\\\\backend\\\\demo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\007ac\\\\Desktop\\\\prace\\\\backend\\\\demo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\007ac\\\\Desktop\\\\prace\\\\backend\\\\demo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\007ac\\\\Desktop\\\\prace\\\\backend\\\\demo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\007ac\\\\Desktop\\\\prace\\\\backend\\\\demo\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{DataTable}from'primereact/datatable';import{Column}from'primereact/column';import{InputText}from'primereact/inputtext';import{MultiSelect}from'primereact/multiselect';import C3Chart from'react-c3js';import'c3/c3.css';import{Dialog}from'primereact/dialog';var Datatable=/*#__PURE__*/function(_Component){_inherits(Datatable,_Component);var _super=_createSuper(Datatable);function Datatable(){var _this;_classCallCheck(this,Datatable);_this=_super.call(this);_this.state={countries:[{field:\"Country\",header:\"Country\"},{field:\"TotalConfirmed\",header:'Infected'},{field:\"TotalDeaths\",header:'Deaths'},{field:\"TotalRecovered\",header:'Recovered'}],selectedColumns:[]};_this.onColumnToggle=_this.onColumnToggle.bind(_assertThisInitialized(_this));_this.onCountrySelect=_this.onCountrySelect.bind(_assertThisInitialized(_this));return _this;}_createClass(Datatable,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({selectedColumns:this.state.countries});}},{key:\"onColumnToggle\",value:function onColumnToggle(event){var selectedColumns=event.value;var orderedSelectedColumns=this.state.countries.filter(function(col){return selectedColumns.includes(col);});this.setState({selectedColumns:orderedSelectedColumns});}},{key:\"onCountrySelect\",value:function onCountrySelect(e){this.setState({displayDialog:true,country:Object.assign({},e.data)});}},{key:\"render\",value:function render(){var _this2=this;var summaryCountries=this.props.summaryCountries;var header=/*#__PURE__*/React.createElement(\"div\",{style:{'textAlign':'center'}},/*#__PURE__*/React.createElement(\"h1\",null,\"Country stats\"),/*#__PURE__*/React.createElement(\"i\",{className:\"pi pi-search\",style:{margin:'4px 4px 0 0'}}),/*#__PURE__*/React.createElement(InputText,{type:\"search\",onInput:function onInput(e){return _this2.setState({globalFilter:e.target.value});},placeholder:\"Global Search\",Size:\"35\"}));var footer=/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'center'}},/*#__PURE__*/React.createElement(MultiSelect,{value:this.state.selectedColumns,options:this.state.countries,optionLabel:\"header\",onChange:this.onColumnToggle,style:{width:'250px'}}));var dynamicColumns=this.state.selectedColumns.map(function(col){return/*#__PURE__*/React.createElement(Column,{field:col.field,header:col.header,sortable:true});});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(DataTable,{value:summaryCountries,selectionMode:\"single\",selection:this.state.selectedCountry,onSelectionChange:function onSelectionChange(e){return _this2.setState({selectedCountry:e.value});},onRowSelect:this.onCountrySelect,header:header,footer:footer,paginator:true,paginatorTemplate:\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",currentPageReportTemplate:\"Showing {first} to {last} of {totalRecords} entries\",rows:20,rowsPerPageOptions:[20,100],globalFilter:this.state.globalFilter,emptyMessage:\"No records found\"},dynamicColumns),/*#__PURE__*/React.createElement(\"div\",{class:\"p-col-8\"},/*#__PURE__*/React.createElement(Dialog,{visible:this.state.displayDialog,header:\"Country Details\",onHide:function onHide(){return _this2.setState({displayDialog:false});}},this.state.country&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{style:{textAlign:'center'}},\"24h stats for \",this.state.country.Country),/*#__PURE__*/React.createElement(C3Chart,{axis:{x:{type:'category',label:{text:'Date',position:'outer-center'}},y:{label:{text:'Number of people',position:'outer-middle'}}},data:this.state.dat={json:[this.state.country],keys:{x:'Date',value:['NewConfirmed','NewDeaths','NewRecovered']},names:{NewConfirmed:'24 hours infected',NewDeaths:'24 hours deaths',NewRecovered:'24 hours recovered'},type:'bar',colors:{NewConfirmed:'#ff6666',NewDeaths:'#8f8f8f',NewRecovered:'#60eb83'}}}),/*#__PURE__*/React.createElement(\"h1\",{style:{textAlign:'center'}},\"Total stats for \",this.state.country.Country),/*#__PURE__*/React.createElement(C3Chart,{axis:{x:{type:'category',label:{text:'Date',position:'outer-center'}},y:{label:{text:'Number of people',position:'outer-middle'}}},data:this.state.dat={json:[this.state.country],keys:{x:'Date',value:['TotalConfirmed','TotalDeaths','TotalRecovered']},names:{TotalConfirmed:'Total infected',TotalDeaths:'Total deaths',TotalRecovered:'Total recovered'},type:'bar',colors:{TotalConfirmed:'#ff6666',TotalDeaths:'#8f8f8f',TotalRecovered:'#60eb83'}}})))));}}]);return Datatable;}(Component);export default Datatable;","map":{"version":3,"sources":["C:/Users/007ac/Desktop/prace/backend/demo/frontend/src/Components/Datatable.js"],"names":["React","Component","DataTable","Column","InputText","MultiSelect","C3Chart","Dialog","Datatable","state","countries","field","header","selectedColumns","onColumnToggle","bind","onCountrySelect","setState","event","value","orderedSelectedColumns","filter","col","includes","e","displayDialog","country","Object","assign","data","summaryCountries","props","margin","globalFilter","target","footer","textAlign","width","dynamicColumns","map","selectedCountry","Country","x","type","label","text","position","y","dat","json","keys","names","NewConfirmed","NewDeaths","NewRecovered","colors","TotalConfirmed","TotalDeaths","TotalRecovered"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport C3Chart from 'react-c3js';\r\nimport 'c3/c3.css';\r\nimport { Dialog } from 'primereact/dialog';\r\nclass Datatable extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            countries: [\r\n                { field: \"Country\", header: \"Country\" },\r\n                { field: \"TotalConfirmed\", header: 'Infected' },\r\n                { field: \"TotalDeaths\", header: 'Deaths' },\r\n                { field: \"TotalRecovered\", header: 'Recovered' }\r\n            ],\r\n            selectedColumns: []\r\n        };\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.onCountrySelect = this.onCountrySelect.bind(this);\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ selectedColumns: this.state.countries });\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n\r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = this.state.countries.filter(col => selectedColumns.includes(col));\r\n        this.setState({ selectedColumns: orderedSelectedColumns });\r\n    }\r\n\r\n    onCountrySelect(e) {\r\n        this.setState({\r\n            displayDialog: true,\r\n            country: Object.assign({}, e.data)\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n        const { summaryCountries } = this.props;\r\n        const header = (\r\n\r\n\r\n            <div style={{ 'textAlign': 'center' }}>\r\n                <h1>Country stats</h1>\r\n                <i className=\"pi pi-search\" style={{ margin: '4px 4px 0 0' }}></i>\r\n                <InputText type=\"search\" onInput={(e) => this.setState({ globalFilter: e.target.value })} placeholder=\"Global Search\" Size=\"35\" />\r\n            </div>\r\n        );\r\n\r\n        const footer = (\r\n\r\n            <div style={{ textAlign: 'center' }}>\r\n                <MultiSelect value={this.state.selectedColumns} options={this.state.countries} optionLabel=\"header\" onChange={this.onColumnToggle} style={{ width: '250px' }} />\r\n            </div>\r\n        );\r\n\r\n\r\n        let dynamicColumns = this.state.selectedColumns.map((col) => {\r\n            return <Column field={col.field} header={col.header} sortable={true} />;\r\n        });\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <DataTable\r\n                    value={summaryCountries}\r\n                    selectionMode=\"single\"\r\n                    selection={this.state.selectedCountry}\r\n                    onSelectionChange={e => this.setState({ selectedCountry: e.value })}\r\n                    onRowSelect={this.onCountrySelect}\r\n                    header={header}\r\n                    footer={footer}\r\n                    paginator={true}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\r\n                    rows={20}\r\n                    rowsPerPageOptions={[20, 100]}\r\n                    globalFilter={this.state.globalFilter}\r\n                    emptyMessage=\"No records found\">\r\n\r\n                    {dynamicColumns}\r\n                </DataTable>\r\n\r\n                <div class=\"p-col-8\">\r\n                    <Dialog visible={this.state.displayDialog} header=\"Country Details\" onHide={() => this.setState({ displayDialog: false })}>\r\n\r\n                        {\r\n                            this.state.country &&\r\n\r\n                            <div>\r\n\r\n                                <h1 style={{ textAlign: 'center' }}>24h stats for {this.state.country.Country}</h1>\r\n                                <C3Chart\r\n\r\n                                    axis={{\r\n                                        x: {\r\n                                            type: 'category',\r\n\r\n                                            label: {\r\n                                                text: 'Date',\r\n                                                position: 'outer-center'\r\n                                            }\r\n                                        },\r\n                                        y: {\r\n                                            label: {\r\n                                                text: 'Number of people',\r\n                                                position: 'outer-middle'\r\n                                            }\r\n                                        },\r\n\r\n                                    }}\r\n\r\n\r\n                                    data={this.state.dat = {\r\n                                        json:\r\n                                            [this.state.country]\r\n\r\n\r\n                                        ,\r\n\r\n                                        keys: {\r\n\r\n                                            x: 'Date',\r\n                                            value: ['NewConfirmed', 'NewDeaths', 'NewRecovered']\r\n                                        },\r\n                                        names: {\r\n                                            NewConfirmed: '24 hours infected',\r\n                                            NewDeaths: '24 hours deaths',\r\n                                            NewRecovered: '24 hours recovered'\r\n\r\n                                        },\r\n\r\n                                        type: 'bar',\r\n\r\n                                        colors: {\r\n                                            NewConfirmed: '#ff6666',\r\n                                            NewDeaths: '#8f8f8f',\r\n                                            NewRecovered: '#60eb83',\r\n\r\n                                        },\r\n\r\n\r\n                                    }\r\n\r\n                                    } />\r\n\r\n                                <h1 style={{ textAlign: 'center' }}>Total stats for {this.state.country.Country}</h1>\r\n                                <C3Chart\r\n\r\n                                    axis={{\r\n                                        x: {\r\n                                            type: 'category',\r\n\r\n                                            label: {\r\n                                                text: 'Date',\r\n                                                position: 'outer-center'\r\n                                            }\r\n                                        },\r\n                                        y: {\r\n                                            label: {\r\n                                                text: 'Number of people',\r\n                                                position: 'outer-middle'\r\n                                            }\r\n                                        },\r\n\r\n                                    }}\r\n                                    data={this.state.dat = {\r\n                                        json:\r\n                                            [this.state.country]\r\n\r\n\r\n                                        ,\r\n\r\n                                        keys: {\r\n\r\n                                            x: 'Date',\r\n                                            value: ['TotalConfirmed', 'TotalDeaths', 'TotalRecovered']\r\n                                        },\r\n                                        names: {\r\n                                            TotalConfirmed: 'Total infected',\r\n                                            TotalDeaths: 'Total deaths',\r\n                                            TotalRecovered: 'Total recovered'\r\n\r\n                                        },\r\n\r\n                                        type: 'bar',\r\n\r\n                                        colors: {\r\n                                            TotalConfirmed: '#ff6666',\r\n                                            TotalDeaths: '#8f8f8f',\r\n                                            TotalRecovered: '#60eb83',\r\n\r\n                                        },\r\n\r\n\r\n                                    }\r\n\r\n                                    } />\r\n\r\n\r\n                            </div>\r\n\r\n                        }\r\n\r\n                    </Dialog>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Datatable;"]},"metadata":{},"sourceType":"module"}