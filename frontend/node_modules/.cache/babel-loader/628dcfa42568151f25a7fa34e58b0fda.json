{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\007ac\\\\Desktop\\\\prace\\\\frontend\\\\src\\\\Components\\\\Datatable.js\";\nimport React, { Component } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Card } from 'primereact/card';\nimport { InputText } from 'primereact/inputtext';\nimport { MultiSelect } from 'primereact/multiselect';\n\nclass Datatable extends Component {\n  constructor() {\n    super();\n    this.state = {\n      countries: [{\n        field: \"Country\",\n        header: \"Country\"\n      }, {\n        field: \"TotalConfirmed\",\n        header: 'Infected'\n      }, {\n        field: \"TotalDeaths\",\n        header: 'Deaths'\n      }, {\n        field: \"TotalRecovered\",\n        header: 'Recovered'\n      }],\n      selectedColumns: []\n    };\n    this.onColumnToggle = this.onColumnToggle.bind(this);\n    this.onCarSelect = this.onCarSelect.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedColumns: this.state.countries\n    });\n  }\n\n  onColumnToggle(event) {\n    let selectedColumns = event.value;\n    let orderedSelectedColumns = this.state.countries.filter(col => selectedColumns.includes(col));\n    this.setState({\n      selectedColumns: orderedSelectedColumns\n    });\n  }\n\n  onCarSelect(e) {\n    this.setState({\n      displayDialog: true,\n      car: Object.assign({}, e.data)\n    });\n  }\n\n  updateProperty(property, value) {\n    let car = this.state.car;\n    car[property] = value;\n    this.setState({\n      car: car\n    });\n  }\n\n  render() {\n    const {\n      summaryCountries\n    } = this.props;\n    const header = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        'textAlign': 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Country stats\"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        margin: '4px 4px 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      onInput: e => this.setState({\n        globalFilter: e.target.value\n      }),\n      placeholder: \"Global Search\",\n      size: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }));\n    const footer = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MultiSelect, {\n      value: this.state.selectedColumns,\n      options: this.state.countries,\n      optionLabel: \"header\",\n      onChange: this.onColumnToggle,\n      style: {\n        width: '250px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }));\n    let dynamicColumns = this.state.selectedColumns.map(col => {\n      return /*#__PURE__*/React.createElement(Column, {\n        field: col.field,\n        header: col.header,\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      value: summaryCountries,\n      selectionMode: \"single\",\n      selection: this.state.selectedCar,\n      onSelectionChange: e => this.setState({\n        selectedCar: e.value\n      }),\n      onRowSelect: this.onCarSelect,\n      header: header,\n      footer: footer,\n      paginator: true,\n      paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n      currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} entries\",\n      rows: 20,\n      rowsPerPageOptions: [20, 100],\n      globalFilter: this.state.globalFilter,\n      emptyMessage: \"No records found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, dynamicColumns), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, this.state.car && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-grid p-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-4\",\n      style: {\n        padding: '.75em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 84\n      }\n    }, \"Country\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-col-8\",\n      style: {\n        padding: '.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      id: \"Country\",\n      onChange: e => {\n        this.updateProperty('Country', e.target.value);\n      },\n      value: this.state.car.Country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    })))));\n  }\n\n}\n\nexport default Datatable;","map":{"version":3,"sources":["C:/Users/007ac/Desktop/prace/frontend/src/Components/Datatable.js"],"names":["React","Component","DataTable","Column","Card","InputText","MultiSelect","Datatable","constructor","state","countries","field","header","selectedColumns","onColumnToggle","bind","onCarSelect","componentDidMount","setState","event","value","orderedSelectedColumns","filter","col","includes","e","displayDialog","car","Object","assign","data","updateProperty","property","render","summaryCountries","props","margin","globalFilter","target","footer","textAlign","width","dynamicColumns","map","selectedCar","padding","Country"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Card } from 'primereact/card';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {MultiSelect} from 'primereact/multiselect';\r\n\r\nclass Datatable extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            countries: [\r\n                { field: \"Country\", header: \"Country\" },\r\n                { field: \"TotalConfirmed\", header: 'Infected' },\r\n                { field: \"TotalDeaths\", header: 'Deaths' },\r\n                { field: \"TotalRecovered\", header: 'Recovered' }\r\n\r\n            ],\r\n            selectedColumns: []\r\n        };\r\n        this.onColumnToggle = this.onColumnToggle.bind(this);\r\n        this.onCarSelect = this.onCarSelect.bind(this);\r\n        \r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({selectedColumns: this.state.countries});\r\n    }\r\n\r\n    onColumnToggle(event) {\r\n      \r\n        let selectedColumns = event.value;\r\n        let orderedSelectedColumns = this.state.countries.filter(col => selectedColumns.includes(col));\r\n        this.setState({selectedColumns: orderedSelectedColumns});\r\n    }\r\n\r\n    onCarSelect(e){\r\n        this.setState({\r\n            displayDialog:true,\r\n            car: Object.assign({}, e.data)\r\n        });\r\n    }\r\n\r\n    updateProperty(property, value) {\r\n        let car = this.state.car;\r\n        car[property] = value;\r\n        this.setState({car: car});\r\n    }\r\n\r\n    render() {\r\n        \r\n        \r\n        const { summaryCountries } = this.props;\r\n        const header = (\r\n    \r\n               \r\n            <div style={{'textAlign':'center'}}>\r\n                <h1>Country stats</h1>\r\n                <i className=\"pi pi-search\" style={{margin:'4px 4px 0 0'}}></i>\r\n                <InputText type=\"search\" onInput={(e) => this.setState({globalFilter: e.target.value})} placeholder=\"Global Search\" size=\"50\"/>\r\n            </div>\r\n        );\r\n\r\n        const footer = (\r\n            \r\n            <div style={{textAlign:'center'}}> \r\n            <MultiSelect value={this.state.selectedColumns} options={this.state.countries} optionLabel=\"header\" onChange={this.onColumnToggle} style={{width:'250px'}}/>\r\n        </div>\r\n        );\r\n\r\n\r\n        let dynamicColumns = this.state.selectedColumns.map((col) => {\r\n            return <Column field={col.field} header={col.header} sortable={true} />;\r\n        });\r\n\r\n        return (\r\n            \r\n            <Card>\r\n                <DataTable \r\n                    value={summaryCountries} \r\n                    selectionMode=\"single\"\r\n                    selection={this.state.selectedCar}\r\n                    onSelectionChange={e => this.setState({selectedCar: e.value})}\r\n                    onRowSelect={this.onCarSelect}\r\n                    header={header}\r\n                    footer={footer}\r\n                    paginator={true}\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" \r\n                    rows={20} \r\n                    rowsPerPageOptions={[20, 100]}\r\n                    globalFilter={this.state.globalFilter} \r\n                    emptyMessage=\"No records found\">\r\n\r\n                    {dynamicColumns}\r\n                </DataTable>\r\n                <div>\r\n                {\r\n                            this.state.car &&\r\n\r\n                            <div className=\"p-grid p-fluid\">\r\n                                <div className=\"p-col-4\" style={{padding:'.75em'}}><label htmlFor=\"Country\">Country</label></div>\r\n                                <div className=\"p-col-8\" style={{padding:'.5em'}}>\r\n                                    <InputText id=\"Country\" onChange={(e) => {this.updateProperty('Country', e.target.value)}} value={this.state.car.Country}/>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Datatable;"]},"metadata":{},"sourceType":"module"}